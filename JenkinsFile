pipeline {
     parameters {
       booleanParam(name: 'autoapprover', defaultValue: false, description: 'Automatically run apply after genrating plan' )
     }
     environment {
         AWS_ACCESS_KEY_ID      = credentials('AWS_ACCESS_KEY_ID')
         AWS_SECRET_ACCESS_KEY  = credentials('AWS_SECRET_ACCESS_KEY')
     }
  
    agent any
    stages 
     {
       /* stage('Checkout') {
            steps {
                script{
          // Set up Git credentials and configure Git tool
                    withCredentials([usernamePassword(credentialsId: 'git-private-key', usernameVariable: 'jenkins', passwordVariable: '')]) 
                     {
                     dir("terraform")
                       {
                          git "https://github.com/gituser1305/terra-vpc.git"
                       }
                    }
                }
               
            }
        } 

        stage('Checkout') {
            steps {
                script {
                    // Use the SSH key credential with the specified credentialsId
                    withCredentials([sshUserPrivateKey(credentialsId: 'git-key', keyFileVariable: '/etc/ssh/ssh_host_rsa_key', passphraseVariable: '', usernameVariable: '')]) {
                        dir("terraform") {
                            sh 'git clone git@github.com/gituser1305/terra-vpc.git'
                        }
                    }
                }
            }
        } */


        stage('Checkout') {
            steps {
                script {
                    // Use the SSH key credential with the specified credentialsId
                    withCredentials([usernamePassword(credentialsId: 'git-key', usernameVariable: 'gituser1305', passwordVariable: 'Yuvaan@1976')]) {
                        dir("terraform") {
                            sh 'git clone https://github.com/gituser1305/terra-vpc.git'
                        }
                    }
                }
            }
        }

        //stage('Terraform Init') {
            //steps {
               //script {
                    // Initialize Terraform
                    //sh 'terraform init'
                //}
            //}
        //}

        stage('Plan') 
         {
            steps {
                 sh 'pwd;cd terraform/ ; terraform init'
                 sh "pwd;cd terraform/ ; terraform plan -out tfplan"
                 sh 'pwd;cd terraform/ ; terraform show -no-color tfplan > tfplan.txt'
                 }
        }
        stage('Approval')
         {
          when {
                 not {
                      equals expected: true, actual: params.autoApprove
                     }
               }
             
         steps
             {
              script {
                   def plan = readFile 'terraform/tfplan.txt'
                   input message: "Do you want to apply the plan?",
                   parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
                     }
             }   
         }

        stage('Apply') 
           {
            steps {
                    sh "pwd;cd terraform/ ; terraform apply -input=false tfplan"
                  }
           }

       stage('Debug AWS Credentials') 
          {
         steps {
             script {
                 echo "AWS_ACCESS_KEY_ID: ${env.AWS_ACCESS_KEY_ID}"
                 echo "AWS_SECRET_ACCESS_KEY: ${env.AWS_SECRET_ACCESS_KEY}"
                   }
              }
         }
    } 

}
